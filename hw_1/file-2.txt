Функциональное программирование — парадигма программирования, в которой процесс вычисления трактуется как вычисление значений функций в математическом понимании последних (в отличие от функций как подпрограмм в процедурном программировании).
Функциональное программирование — это набор идей, а не набор четких указаний.
Основана на лямбда-исчислении.
Функции используются почти для всего, 
даже для простейших расчетов. 
Даже переменные заменяются функциями.

Объект первого класса - это такой объект, который может быть динамически создан, уничтожен, передан в качестве аргумента или возвращен из функции.
Функции в Python - это объекты первого класса (порядка).

Функции высшего порядка - это функции, которые принимают другие функции в качестве аргументов или возвращают их как результат.

Чистые функции:
Легко применять, тестировать и анализировать
Мемоизация - чистые функции более эффективны после того, как функция обработала некоторый ввод, результат которого может быть сохранен и взят в следующий раз, когда функция вызывается для аналогичного ввода. Такую функцию не нужно вызывать снова
Легче обрабатывать параллельно
Сильно усложняют задачу ввода/вывода, которая требует дополнительных побочных эффектов

Плюсы ФП:
Модульность
Простота тестирования
Возможность распараллеливания кода
Кэшируемость результатов
Возможность доказать формальное корректность программы
Переиспользуемость


Функциональное программирование — парадигма программирования, в которой процесс вычисления трактуется как вычисление значений функций в математическом понимании последних (в отличие от функций как подпрограмм в процедурном программировании).
Функциональное программирование — это набор идей, а не набор четких указаний.
Основана на лямбда-исчислении.
Функции используются почти для всего,
даже для простейших расчетов.
Даже переменные заменяются функциями.

Объект первого класса - это такой объект, который может быть динамически создан, уничтожен, передан в качестве аргумента или возвращен из функции.
Функции в Python - это объекты первого класса (порядка).

Функции высшего порядка - это функции, которые принимают другие функции в качестве аргументов или возвращают их как результат.

Чистые функции:
Легко применять, тестировать и анализировать
Мемоизация - чистые функции более эффективны после того, как функция обработала некоторый ввод, результат которого может быть сохранен и взят в следующий раз, когда функция вызывается для аналогичного ввода. Такую функцию не нужно вызывать снова
Легче обрабатывать параллельно
Сильно усложняют задачу ввода/вывода, которая требует дополнительных побочных эффектов

Плюсы ФП:
Модульность
Простота тестирования
Возможность распараллеливания кода
Кэшируемость результатов
Возможность доказать формальное корректность программы
Переиспользуемость